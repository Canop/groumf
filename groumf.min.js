// https://github.com/Canop/groumf
!function(){function opt(options,name,defaultValue){return opt&&void 0!==opt[name]?opt[name]:defaultValue}function Groumf(options){this.forest={},this.skippedTags={},this.dontCutWords=opt(options,"dontCutWords",!0),this.skipTags("audio","img","svg","title","video")}Groumf.prototype.skipTags=function(){for(var i=0;i<arguments.length;i++)this.skippedTags[arguments[i].toUpperCase()]=!0},Groumf.prototype.dontSkipTags=function(){for(var i=0;i<arguments.length;i++)this.skippedTags[arguments[i].toUpperCase()]=!1},Groumf.prototype.add=function(expr,value){if(expr.length<3)return console.log('Expression "'+expr+'" ignored : too short');var root=expr.slice(0,3).toLowerCase(),tree=this.forest[root];tree||(tree=this.forest[root]=[]),tree.push({p:expr.toLowerCase(),v:value||expr}),tree.sort(function(a,b){return b.p.length-a.p.length})},Groumf.prototype.get=function(expr){var lexpr=expr.toLowerCase(),tree=this.forest[lexpr.slice(0,3)];if(tree)for(var i=0;i<tree.length;i++)if(tree[i].p===lexpr)return tree[i].v},Groumf.prototype.replace=function(input,cb,arg3){var nodes=input.childNodes;if(nodes){for(var i=nodes.length;i--;){var node=nodes[i];if(3===node.nodeType){var initialText=node.nodeValue,changedText=this.replace(initialText,cb,arg3);if(changedText&&changedText!==initialText)if(/</.test(changedText)){var newNode=document.createElement("span");newNode.innerHTML=changedText,node.parentNode.insertBefore(newNode,node),node.parentNode.removeChild(node)}else node.nodeValue=changedText}else this.skippedTags[node.tagName]||this.replace(node,cb,arg3)}return input}if(arg3)return input.replace(cb,arg3);for(var char,end=input.length-2,output=[],copied=0,p=0;end>p;p++)if(!(this.dontCutWords&&p&&/\w/.test(input[p-1]))){var root=input.slice(p,p+3).toLowerCase(),tree=this.forest[root];if(tree)for(var i=0;i<tree.length;i++){var pat=tree[i].p;if(!(this.dontCutWords&&(char=input[p+pat.length])&&/\w/.test(char))){var cur=input.slice(p,p+pat.length);if(cur.toLowerCase()===pat){var r=cb?cb(cur,tree[i].v):tree[i].v;p&&output.push(input.slice(copied,p)),output.push(r),p+=pat.length,copied=p;break}}}}return output.push(input.slice(copied,input.length)),output.join("")},"undefined"!=typeof module?module.exports=Groumf:window&&(window.Groumf=Groumf)}();
